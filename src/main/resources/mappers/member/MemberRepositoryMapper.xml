<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.ginong.web.repository.member.MemberRepository">

    <select id="find" resultType="Member">
        select * from MEMBER
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            <if test="name != null">
                USER_NAME = #{name}
            </if>
        </where>
    </select>

    <select id="findByOrderId" resultType="Member">
        select
		*
		from `ORDER` O LEFT JOIN MEMBER M
		ON O.MEMBER_ID = M.ID
		where O.ID = #{orderId}
    </select>


    <insert id="insertMember" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO MEMBER
        ( NAME, USER_NAME, EMAIL, PWD, PHONE, JOIN_DATE, AGREE , BIRTH_DATE)
        VALUES(#{name},#{userName}, #{email}, #{pwd}, #{phone}, current_timestamp(),#{agree} ,#{birthDate})
    </insert>

    <insert id="insertRoute">
        INSERT INTO JOIN_ROUTE (MEMBER_ID,NAME)
        VALUES (#{memberId},#{name});
    </insert>

    <select id="searchByNameAndMail" resultType="int">
        SELECT COUNT(ID) valid
        FROM `MEMBER`
        WHERE USER_NAME = #{userName}
        AND EMAIL = #{email}

    </select>

    <select id="searchByRealNameAndMail" resultType="Member" parameterType="map">
        SELECT NAME, EMAIL, USER_NAME, JOIN_DATE
        FROM MEMBER
        WHERE NAME = #{name}
        AND EMAIL = #{email}
    </select>

    <update id="updateByUserName" parameterType="String">
        UPDATE `MEMBER`
        SET PWD = #{pwd}
        WHERE USER_NAME = #{userName}
    </update>

    <select id = "findByUsername" resultType="Member">
        select
        *
        from `MEMBER`
        where USER_NAME=#{username}
    </select>

    <insert id="insertAuthorityByUserId" parameterType="MemberRole">
        INSERT INTO MEMBER_ROLE
        (MEMBER_ID, ROLE_NAME)
        VALUES(#{memberId}, #{roleName})
    </insert>

    <select id="getTotalMemberCount" resultType="int">
        select
        count(*)
        from
        MEMBER;
    </select>

    <update id="update" parameterType="memberView">
        UPDATE MEMBER_VIEW
        <set>
            <if test="name != null"> name = #{name}, </if>
            <if test="userName != null"> userName = #{userName}, </if>
            <if test="cost != null"> cost = #{cost}, </if>
            <if test="phone != null"> phone = #{phone}, </if>
            <if test="addr1 != null"> addr1 = #{addr1}, </if>
            <if test="addr2 != null"> addr2 = #{addr2}, </if>
            <if test="email != null"> email = #{email}, </if>
        </set>
        <where>
            <if test="id != null">
                id = #{id}
            </if>
        </where>
    </update>



</mapper>