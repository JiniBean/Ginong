<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.ginong.web.repository.product.ProductRepository">
	
	<select id="findAll" resultType="ProductView">
		select
			*
		from PRODUCT_VIEW
		<where>
			<if test="categoryId != null">
				category_id = #{categoryId}
			</if>
			<if test="query != null">
				AND name like '%${query}%'
			</if>
		</where>
		<choose>
			<when test="sortType == 1">
				order by PRICE
			</when>
			<when test="sortType == 2">
				order by LIKE_COUNT DESC
			</when>
		</choose>
		limit #{offset}, #{size}
	</select>

	<select id="findById" resultType="ProductView">
		select
			*
		from PRODUCT_VIEW
		where id = #{id}
	</select>
	
	<select id="count" resultType="Integer">
		select
			count(id)
		from PRODUCT

		<where>
			<if test="categoryId != null">
				category_id = #{categoryId}
			</if>
			<if test="query != null">
				AND name like '%${query}%'
			</if>
		</where>
	</select>

	<insert id="save" parameterType="Product" useGeneratedKeys="true" keyProperty="id">
    	INSERT INTO PRODUCT(
			name, price, quantity, weight, thumbnail_name, thumbnail_path, 
			exp, `desc`, state, category_id, storage_type_id, member_id,
			quantity_category_id, weight_category_id) 
		VALUES(
			#{name}, #{price}, #{quantity}, #{weight}, #{thumbnailName}, #{thumbnailPath},
			#{exp}, #{desc}, #{state}, #{categoryId}, #{storageTypeId}, #{memberId},
			#{quantityCategoryId}, #{weightCategoryId} )
   </insert>

	<insert id="saveStock" parameterType="Stock">
		INSERT INTO STOCK(
		AMOUNT, POSITIVE, MADE_DATE, `DESC`, ADMIN_ID, PRODUCT_ID)
		VALUES(
		#{amount}, #{positive}, #{madeDate}, #{desc}, #{adminId}, #{productId})
	</insert>

   <update id="update" parameterType="Product">
	   UPDATE PRODUCT
		<set>
			<if test="name != null"> name = #{name}, </if>
			<if test="price != null"> price = #{price}, </if>
			<if test="weight != null"> weight = #{weight}, </if>
			<if test="thumbnailName != null"> thumbnail_name = #{thumbnailName}, </if>
			<if test="thumbnailPath != null"> thumbnail_path = #{thumbnailPath}, </if>
			<if test="exp != null"> exp = #{exp}, </if>
			<if test="desc != null"> `desc` = #{desc}, </if>
			<if test="state != null"> state = #{state}, </if>
			<if test="quantity != null"> quantity = #{quantity}, </if>
			<if test="categoryId != null"> category_id = #{categoryId}, </if>
			<if test="storageTypeId != null"> storage_type_id = #{storageTypeId}, </if>
			<if test="adminId != null"> admin_id = #{adminId}, </if>
			<if test="quantityCategoryId != null"> quantity_category_id = #{quantityCategoryId}, </if>
			<if test="weightCategoryId != null"> weight_category_id = #{weightCategoryId}, </if>
		</set>
		<where>
			<if test="id != null">
				id = #{id}
			</if>
		</where>
   </update>


	<update id="updateState">
		UPDATE PRODUCT SET STATE = FALSE
		<where>
			<foreach item="item" collection="ids"
					 open="ID in (" separator="," close=")">
				#{item}
			</foreach>
		</where>
	</update>

   <delete id="delete" parameterType="Product">
		delete from PRODUCT
		<where>
			<if test="id != null">
				id = #{id}
			</if>	
		</where>
   </delete>

</mapper>